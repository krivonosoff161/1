import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ POST-ONLY –æ—Ä–¥–µ—Ä–æ–≤
"""
import asyncio
import sys

sys.path.append(".")
from src.config import load_config
from src.okx_client import OKXClient


async def debug_post_only():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ POST-ONLY –æ—Ä–¥–µ—Ä–æ–≤"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê POST-ONLY –û–†–î–ï–†–û–í")
    print("=" * 50)

    try:
        config = load_config()
        async with OKXClient(config.api["okx"]) as client:
            # 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
            print("\n1Ô∏è‚É£ –¢–ï–ö–£–©–ê–Ø –¶–ï–ù–ê:")
            print("-" * 30)
            ticker = await client.get_ticker("BTC-USDT")
            current_price = float(ticker.get("last", 0))
            print(f"   –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${current_price:,.2f}")

            # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
            print("\n2Ô∏è‚É£ –¢–ï–°–¢ –†–ê–ó–ù–´–• –û–¢–°–¢–£–ü–û–í:")
            print("-" * 30)

            offsets = [
                0.0001,
                0.0005,
                0.001,
                0.005,
                0.01,
            ]  # 0.01%, 0.05%, 0.1%, 0.5%, 1%

            for offset in offsets:
                buy_price = current_price * (1 - offset)
                sell_price = current_price * (1 + offset)

                print(f"   –û—Ç—Å—Ç—É–ø {offset*100:.2f}%:")
                print(
                    f"     BUY: ${buy_price:,.2f} (–æ—Ç—Å—Ç—É–ø: ${current_price - buy_price:,.2f})"
                )
                print(
                    f"     SELL: ${sell_price:,.2f} (–æ—Ç—Å—Ç—É–ø: ${sell_price - current_price:,.2f})"
                )

                # –¢–µ—Å—Ç–∏—Ä—É–µ–º BUY –æ—Ä–¥–µ—Ä
                try:
                    test_order = await client.place_order(
                        inst_id="BTC-USDT",
                        side="buy",
                        order_type="LIMIT",
                        quantity="0.0001",
                        price=str(buy_price),
                        post_only=True,
                    )

                    if test_order.get("data"):
                        order_id = test_order["data"][0]["ordId"]
                        print(f"     ‚úÖ BUY –æ—Ä–¥–µ—Ä —Ä–∞–∑–º–µ—â–µ–Ω: {order_id}")

                        # –û—Ç–º–µ–Ω—è–µ–º –æ—Ä–¥–µ—Ä
                        await client.cancel_order("BTC-USDT", order_id)
                        print(f"     ‚úÖ BUY –æ—Ä–¥–µ—Ä –æ—Ç–º–µ–Ω–µ–Ω")
                    else:
                        print(f"     ‚ùå BUY –æ—Ä–¥–µ—Ä –Ω–µ —Ä–∞–∑–º–µ—â–µ–Ω")

                except Exception as e:
                    print(f"     ‚ùå BUY –æ—Ä–¥–µ—Ä –æ—à–∏–±–∫–∞: {e}")

                print()

            # 3. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã
            print("\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:")
            print("-" * 30)
            print("   POST-ONLY –æ—Ä–¥–µ—Ä–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å:")
            print("   - BUY: –Ω–∏–∂–µ —Ä—ã–Ω–æ—á–Ω–æ–π —Ü–µ–Ω—ã")
            print("   - SELL: –≤—ã—à–µ —Ä—ã–Ω–æ—á–Ω–æ–π —Ü–µ–Ω—ã")
            print("   - –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–ª–µ–∫–æ –æ—Ç —Ä—ã–Ω–∫–∞")

            # 4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            print("\n4Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
            print("-" * 30)
            print("1. –£–≤–µ–ª–∏—á–∏—Ç—å –æ—Ç—Å—Ç—É–ø –æ—Ç —Ä—ã–Ω–æ—á–Ω–æ–π —Ü–µ–Ω—ã")
            print("2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ —Ü–µ–Ω—ã")
            print("3. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –æ—Ç—Å—Ç—É–ø–∞")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(debug_post_only())
