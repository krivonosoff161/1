#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ç–æ–ª—å–∫–æ WebSocket.connect() –º–µ—Ç–æ–¥–∞
–ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–¥–µ –∏–º–µ–Ω–Ω–æ –∑–∞–≤–∏—Å–∞–µ—Ç
"""

import asyncio
import os
import sys

sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))

from src.websocket_manager import WebSocketConfig, WebSocketPriceManager


async def test_websocket_connect_only():
    """–¢–µ—Å—Ç —Ç–æ–ª—å–∫–æ connect() –º–µ—Ç–æ–¥–∞"""
    print("üß™ Testing WebSocket connect() method only")
    print("=" * 50)

    try:
        # –°–æ–∑–¥–∞–µ–º WebSocket Manager
        print("üîß Creating WebSocket Manager...")
        config = WebSocketConfig()
        manager = WebSocketPriceManager(config)

        print(f"   URL: {config.url}")
        print(f"   Connected: {manager.is_connected}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ connect() —Å timeout
        print("üöÄ Testing connect() with timeout...")

        try:
            result = await asyncio.wait_for(manager.connect(), timeout=5.0)
            print(f"‚úÖ Connect() completed: {result}")

            if result:
                print("‚úÖ WebSocket connected successfully!")
                await manager.disconnect()
                print("‚úÖ Disconnected successfully!")
            else:
                print("‚ùå WebSocket connection failed")

        except asyncio.TimeoutError:
            print("‚è∞ Connect() timed out after 5 seconds")
            print("   This means websockets.connect() is hanging!")
            return False
        except Exception as e:
            print(f"‚ùå Connect() failed: {e}")
            import traceback

            traceback.print_exc()
            return False

        return True

    except Exception as e:
        print(f"‚ùå Test failed: {e}")
        import traceback

        traceback.print_exc()
        return False


if __name__ == "__main__":
    result = asyncio.run(test_websocket_connect_only())

    if result:
        print("üéâ Test PASSED!")
    else:
        print("üí• Test FAILED!")
        sys.exit(1)
