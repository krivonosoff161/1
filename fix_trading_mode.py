#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏
"""
import asyncio
import sys

sys.path.append(".")
from src.config import load_config
from src.okx_client import OKXClient


async def fix_trading_mode():
    """–ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∂–∏–º —Ç–æ—Ä–≥–æ–≤–ª–∏"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ï–ñ–ò–ú–ê –¢–û–†–ì–û–í–õ–ò")
    print("=" * 50)

    try:
        config = load_config()
        async with OKXClient(config.api["okx"]) as client:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º
            print("\n1Ô∏è‚É£ –¢–ï–ö–£–©–ò–ô –†–ï–ñ–ò–ú:")
            print("-" * 30)
            account_config = await client.get_account_config()
            print(f"   Position Mode: {account_config.get('posMode', 'N/A')}")
            print(f"   Account Level: {account_config.get('acctLv', 'N/A')}")

            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–π–º—ã
            print("\n2Ô∏è‚É£ –ó–ê–ô–ú–´:")
            print("-" * 30)
            btc_borrowed = await client.get_borrowed_balance("BTC")
            usdt_borrowed = await client.get_borrowed_balance("USDT")
            print(f"   BTC –∑–∞–π–º: {btc_borrowed}")
            print(f"   USDT –∑–∞–π–º: {usdt_borrowed}")

            # 3. –ê–Ω–∞–ª–∏–∑
            print("\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó:")
            print("-" * 30)

            if account_config.get("posMode") == "long_short_mode":
                print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: Position Mode = long_short_mode (MARGIN)")
                print("   –†–ï–®–ï–ù–ò–ï: –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ net_mode –≤ OKX")
                print("   Settings ‚Üí Trading ‚Üí Position Mode ‚Üí Net")
            else:
                print("‚úÖ Position Mode: SPOT")

            if float(btc_borrowed) > 0 or float(usdt_borrowed) > 0:
                print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ï—Å—Ç—å –∑–∞–π–º—ã")
                print("   –†–ï–®–ï–ù–ò–ï: –ü–æ–≥–∞—Å–∏—Ç—å –∑–∞–π–º—ã –≤ OKX")
            else:
                print("‚úÖ –ó–∞–π–º–æ–≤ –Ω–µ—Ç")

            # 4. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            print("\n4Ô∏è‚É£ –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:")
            print("-" * 30)
            print("1. –û—Ç–∫—Ä–æ–π—Ç–µ OKX –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
            print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí Trading")
            print("3. Position Mode ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ 'Net' (–≤–º–µ—Å—Ç–æ Long/Short)")
            print("4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è")
            print("5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Position Mode = net_mode")

            # 5. –¢–µ—Å—Ç –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            print("\n5Ô∏è‚É£ –¢–ï–°–¢ –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
            print("-" * 30)
            print("–ü–æ—Å–ª–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ Net —Ä–µ–∂–∏–º:")
            print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python test_full_trading_system.py")
            print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ç–æ—Ä–≥–æ–≤–ª—é")
            print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Ä–¥–µ—Ä–∞ —Ä–∞–∑–º–µ—â–∞—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(fix_trading_mode())
