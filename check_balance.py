#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ OKX
"""
import asyncio
import os
import sys

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.config import APIConfig
from src.okx_client import OKXClient


async def main():
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
        config = APIConfig()
        client = OKXClient(config)

        print("üîç –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–ê OKX")
        print("=" * 50)

        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å
        balances = await client.get_account_balance()

        total_usd = 0.0
        print(
            f"{'–í–∞–ª—é—Ç–∞':<10} {'–°–≤–æ–±–æ–¥–Ω–æ':<15} {'–ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ':<15} {'–í—Å–µ–≥–æ':<15} {'USD':<15}"
        )
        print("-" * 70)

        for balance in balances:
            if balance.total > 0:
                # –ü—Ä–∏–º–µ—Ä–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ USD (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)
                if balance.currency == "USDT":
                    usd_value = balance.total
                elif balance.currency == "BTC":
                    # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É BTC
                    try:
                        ticker = await client.get_ticker("BTC-USDT")
                        btc_price = float(ticker.get("last", 0))
                        usd_value = balance.total * btc_price
                    except:
                        usd_value = balance.total * 100000  # –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞
                elif balance.currency == "ETH":
                    try:
                        ticker = await client.get_ticker("ETH-USDT")
                        eth_price = float(ticker.get("last", 0))
                        usd_value = balance.total * eth_price
                    except:
                        usd_value = balance.total * 4000  # –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞
                else:
                    usd_value = 0

                total_usd += usd_value

                print(
                    f"{balance.currency:<10} {balance.free:<15.8f} {balance.frozen:<15.8f} {balance.total:<15.8f} ${usd_value:<14.2f}"
                )

        print("-" * 70)
        print(f"{'–ò–¢–û–ì–û USD:':<40} ${total_usd:.2f}")
        print("=" * 50)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏
        print("\nüîç –û–¢–ö–†–´–¢–´–ï –ü–û–ó–ò–¶–ò–ò:")
        positions = await client.get_positions()
        if positions:
            for pos in positions:
                print(
                    f"  {pos.symbol}: {pos.side.value} {pos.size:.8f} @ ${pos.entry_price:.2f}"
                )
        else:
            print("  –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π")

    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(main())
