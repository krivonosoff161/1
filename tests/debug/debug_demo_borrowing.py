#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–π–º–æ–≤ –≤ –¥–µ–º–æ –∞–∫–∫–∞—É–Ω—Ç–µ
"""
import asyncio
import sys

sys.path.append(".")
from src.config import load_config
from src.okx_client import OKXClient


async def debug_demo_borrowing():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–π–º–æ–≤ –≤ –¥–µ–º–æ –∞–∫–∫–∞—É–Ω—Ç–µ"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ô–ú–û–í –í –î–ï–ú–û –ê–ö–ö–ê–£–ù–¢–ï")
    print("=" * 60)

    try:
        config = load_config()
        async with OKXClient(config.api["okx"]) as client:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–π–º—ã –î–û —Å–¥–µ–ª–∫–∏
            print("\n1Ô∏è‚É£ –ó–ê–ô–ú–´ –î–û –°–î–ï–õ–ö–ò:")
            print("-" * 30)
            btc_borrowed_before = await client.get_borrowed_balance("BTC")
            usdt_borrowed_before = await client.get_borrowed_balance("USDT")
            print(f"   BTC –∑–∞–π–º: {btc_borrowed_before}")
            print(f"   USDT –∑–∞–π–º: {usdt_borrowed_before}")

            # 2. –†–∞–∑–º–µ—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ä–¥–µ—Ä
            print("\n2Ô∏è‚É£ –†–ê–ó–ú–ï–©–ï–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –û–†–î–ï–†–ê:")
            print("-" * 30)
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
                ticker = await client.get_ticker("BTC-USDT")
                current_price = float(ticker.get("last", 0))
                print(f"   –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${current_price:,.2f}")

                # –†–∞–∑–º–µ—â–∞–µ–º –æ—Ä–¥–µ—Ä
                test_order = await client.place_order(
                    inst_id="BTC-USDT",
                    side="buy",
                    order_type="LIMIT",
                    quantity="0.0001",
                    price=str(current_price * 0.99),  # –ù–∏–∂–µ —Ä—ã–Ω–∫–∞
                    post_only=True,
                )

                if test_order.get("data"):
                    order_id = test_order["data"][0]["ordId"]
                    print(f"   ‚úÖ –û—Ä–¥–µ—Ä —Ä–∞–∑–º–µ—â–µ–Ω: {order_id}")

                    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–π–º—ã –ü–û–°–õ–ï —Å–¥–µ–ª–∫–∏
                    print("\n3Ô∏è‚É£ –ó–ê–ô–ú–´ –ü–û–°–õ–ï –°–î–ï–õ–ö–ò:")
                    print("-" * 30)
                    await asyncio.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞

                    btc_borrowed_after = await client.get_borrowed_balance("BTC")
                    usdt_borrowed_after = await client.get_borrowed_balance("USDT")
                    print(f"   BTC –∑–∞–π–º: {btc_borrowed_after}")
                    print(f"   USDT –∑–∞–π–º: {usdt_borrowed_after}")

                    # 4. –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                    print("\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô:")
                    print("-" * 30)
                    btc_change = float(btc_borrowed_after) - float(btc_borrowed_before)
                    usdt_change = float(usdt_borrowed_after) - float(
                        usdt_borrowed_before
                    )

                    if btc_change > 0 or usdt_change > 0:
                        print("üö® –ü–†–û–ë–õ–ï–ú–ê: –ó–∞–π–º—ã —É–≤–µ–ª–∏—á–∏–ª–∏—Å—å –ø–æ—Å–ª–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–∞!")
                        print(f"   BTC –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {btc_change}")
                        print(f"   USDT –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {usdt_change}")
                        print("\n   –ü–†–ò–ß–ò–ù–ê: –î–µ–º–æ –∞–∫–∫–∞—É–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–µ—Ä–µ—Ç –∑–∞–π–º—ã")
                        print(
                            "   –†–ï–®–ï–ù–ò–ï: –ù—É–∂–Ω–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≥–∞—Å–∏—Ç—å –∑–∞–π–º—ã –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Å–¥–µ–ª–∫–∏"
                        )
                    else:
                        print("‚úÖ –ó–∞–π–º—ã –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å")

                    # –û—Ç–º–µ–Ω—è–µ–º –æ—Ä–¥–µ—Ä
                    await client.cancel_order("BTC-USDT", order_id)
                    print(f"   ‚úÖ –û—Ä–¥–µ—Ä –æ—Ç–º–µ–Ω–µ–Ω: {order_id}")

                else:
                    print("   ‚ùå –û—Ä–¥–µ—Ä –Ω–µ —Ä–∞–∑–º–µ—â–µ–Ω")

            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–∞: {e}")

            # 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            print("\n5Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
            print("-" * 30)
            print("1. –î–µ–º–æ –∞–∫–∫–∞—É–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–µ—Ä–µ—Ç –∑–∞–π–º—ã")
            print("2. –ù—É–∂–Ω–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≥–∞—à–∞—Ç—å –∑–∞–π–º—ã –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Å–¥–µ–ª–∫–∏")
            print("3. –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–≥–∞—à–µ–Ω–∏–µ –∑–∞–π–º–æ–≤")
            print("4. –ò–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∏—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é –¥–ª—è –¥–µ–º–æ")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(debug_demo_borrowing())
