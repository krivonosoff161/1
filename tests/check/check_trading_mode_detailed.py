import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–µ–∂–∏–º–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏
"""
import asyncio
import sys

sys.path.append(".")
from src.config import load_config
from src.okx_client import OKXClient


async def check_trading_mode_detailed():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏"""
    print("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –†–ï–ñ–ò–ú–ê –¢–û–†–ì–û–í–õ–ò")
    print("=" * 60)

    try:
        config = load_config()
        async with OKXClient(config.api["okx"]) as client:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞
            print("\n1Ô∏è‚É£ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ê–ö–ö–ê–£–ù–¢–ê:")
            print("-" * 30)
            account_config = await client.get_account_config()
            print(f"   Account Level: {account_config.get('acctLv', 'N/A')}")
            print(f"   Position Mode: {account_config.get('posMode', 'N/A')}")
            print(f"   Auto Loan: {account_config.get('autoLoan', 'N/A')}")
            print(f"   Level: {account_config.get('level', 'N/A')}")
            print(f"   Level Temporary: {account_config.get('levelTmp', 'N/A')}")

            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –∏ –∑–∞–π–º—ã
            print("\n2Ô∏è‚É£ –ë–ê–õ–ê–ù–° –ò –ó–ê–ô–ú–´:")
            print("-" * 30)
            btc_balance = await client.get_balance("BTC")
            usdt_balance = await client.get_balance("USDT")
            btc_borrowed = await client.get_borrowed_balance("BTC")
            usdt_borrowed = await client.get_borrowed_balance("USDT")

            print(f"   BTC Balance: {btc_balance}")
            print(f"   USDT Balance: {usdt_balance}")
            print(f"   BTC Borrowed: {btc_borrowed}")
            print(f"   USDT Borrowed: {usdt_borrowed}")

            # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
            print("\n3Ô∏è‚É£ –ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê:")
            print("-" * 30)
            print(f"   Trading Mode: {config.trading.mode}")
            print(f"   Symbols: {config.trading.symbols}")
            print(f"   Risk Management: {config.risk.max_daily_loss}%")

            # 4. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã
            print("\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:")
            print("-" * 30)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –∞–∫–∫–∞—É–Ω—Ç–∞
            if account_config.get("acctLv") == "1":
                print("‚úÖ Account Level: 1 (Simple mode - SPOT only)")
            else:
                print(f"‚ùå Account Level: {account_config.get('acctLv')} (Margin mode)")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –ø–æ–∑–∏—Ü–∏–π
            if account_config.get("posMode") == "net_mode":
                print("‚úÖ Position Mode: net_mode (SPOT)")
            elif account_config.get("posMode") == "long_short_mode":
                print("‚ùå Position Mode: long_short_mode (MARGIN)")
            else:
                print(f"‚ö†Ô∏è Position Mode: {account_config.get('posMode')} (Unknown)")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–π–º—ã
            if float(btc_borrowed) > 0 or float(usdt_borrowed) > 0:
                print("‚ùå –ï—Å—Ç—å –∑–∞–π–º—ã - –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ç–æ—Ä–≥–æ–≤–ª—é")
            else:
                print("‚úÖ –ó–∞–π–º–æ–≤ –Ω–µ—Ç")

            # 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            print("\n5Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
            print("-" * 30)

            if account_config.get("posMode") == "long_short_mode":
                print("üîß –ü–†–û–ë–õ–ï–ú–ê: Position Mode = long_short_mode")
                print("   –†–ï–®–ï–ù–ò–ï: –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ net_mode –≤ OKX")
                print("   Settings ‚Üí Trading ‚Üí Position Mode ‚Üí Net")

            if float(btc_borrowed) > 0 or float(usdt_borrowed) > 0:
                print("üîß –ü–†–û–ë–õ–ï–ú–ê: –ï—Å—Ç—å –∑–∞–π–º—ã")
                print("   –†–ï–®–ï–ù–ò–ï: –ü–æ–≥–∞—Å–∏—Ç—å –∑–∞–π–º—ã –≤ OKX")
                print("   Portfolio ‚Üí Borrow ‚Üí Repay All")

            # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –±–æ—Ç–∞
            print("\n6Ô∏è‚É£ –õ–û–ì–ò–ö–ê –ë–û–¢–ê:")
            print("-" * 30)
            print("   –ë–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–π–º—ã –ø–µ—Ä–µ–¥ –∫–∞–∂–¥–æ–π —Å–¥–µ–ª–∫–æ–π")
            print("   –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–π–º—ã - –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ç–æ—Ä–≥–æ–≤–ª—é")
            print("   –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è SPOT —Ç–æ—Ä–≥–æ–≤–ª–∏")

            # 7. –¢–µ—Å—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–∞
            print("\n7Ô∏è‚É£ –¢–ï–°–¢ –†–ê–ó–ú–ï–©–ï–ù–ò–Ø –û–†–î–ï–†–ê:")
            print("-" * 30)
            try:
                # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ä–¥–µ—Ä
                test_order = await client.place_order(
                    inst_id="BTC-USDT",
                    side="buy",
                    order_type="LIMIT",
                    quantity="0.0001",
                    price="50000",
                    post_only=True,
                )
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ä–¥–µ—Ä —Ä–∞–∑–º–µ—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                print(
                    f"   Order ID: {test_order.get('data', [{}])[0].get('ordId', 'N/A')}"
                )

                # –û—Ç–º–µ–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ä–¥–µ—Ä
                if test_order.get("data"):
                    order_id = test_order["data"][0]["ordId"]
                    await client.cancel_order("BTC-USDT", order_id)
                    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ä–¥–µ—Ä –æ—Ç–º–µ–Ω–µ–Ω")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–∞: {e}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(check_trading_mode_detailed())
