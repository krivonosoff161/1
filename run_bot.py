"""
–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞ OKX.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞.
–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ YAML —Ñ–∞–π–ª–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –¥–µ–º–æ-—Ç–æ—Ä–≥–æ–≤–ª–∏ –∏–ª–∏ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏.

Usage:
    python run_bot.py --config config.yaml
    python run_bot.py -c my_config.yaml

Examples:
    # –ó–∞–ø—É—Å–∫ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    python run_bot.py

    # –ó–∞–ø—É—Å–∫ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    python run_bot.py --config custom_config.yaml
"""

import argparse
import asyncio
import os
import sys
from pathlib import Path
from typing import NoReturn

# –î–æ–±–∞–≤–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é src –≤ –ø—É—Ç—å –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "src")))

from src.config import load_config  # noqa: E402
from src.main import BotRunner  # noqa: E402


def main() -> NoReturn:
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞.

    –ü–∞—Ä—Å–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏, –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ YAML —Ñ–∞–π–ª–∞,
    –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç BotRunner —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç
    –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–∏–∫–ª.

    Command-line Arguments:
        --config, -c: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (default: config.yaml)

    Raises:
        FileNotFoundError: –ï—Å–ª–∏ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
        ValueError: –ï—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        SystemExit: –ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö —Å –∫–æ–¥–æ–º 1

    Returns:
        NoReturn: –§—É–Ω–∫—Ü–∏—è –ª–∏–±–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, –ª–∏–±–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è
    """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —á–µ—Ä–µ–∑ lock file
    lock_file = Path("data/cache/bot.lock")
    lock_file.parent.mkdir(parents=True, exist_ok=True)

    if lock_file.exists():
        print("=" * 70)
        print("ERROR: Bot is already running!")
        print("=" * 70)
        print(f"Lock file found: {lock_file}")
        print("If bot is not running, delete the lock file:")
        print(f"  del {lock_file}")
        print("=" * 70)
        sys.exit(1)

    # –°–æ–∑–¥–∞—ë–º lock file
    try:
        lock_file.write_text(str(os.getpid()))
    except Exception as e:
        print(f"WARNING: Could not create lock file: {e}")

    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    parser = argparse.ArgumentParser(
        description="OKX Trading Bot - –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç",
        epilog="–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏: python run_bot.py --help",
    )
    parser.add_argument(
        "--config",
        "-c",
        default="config.yaml",
        help="–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (default: config.yaml)",
    )
    parser.add_argument(
        "--mode",
        choices=["websocket", "rest"],
        default="rest",
        help="–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: websocket (real-time) –∏–ª–∏ rest (polling)",
    )
    parser.add_argument(
        "--test-mode",
        action="store_true",
        help="–ó–∞–ø—É—Å–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º",
    )
    args = parser.parse_args()

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã
    print("=" * 70)
    print("OKX Trading Bot - Starting...")
    print("=" * 70)
    print("MODE: DEMO (OKX Sandbox)")
    print(f"Config: {args.config}")
    print(f"Mode: {args.mode.upper()}")
    if args.test_mode:
        print("TEST MODE: ENABLED")
    print("=" * 70)
    print()

    async def run_with_cleanup():
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º."""
        bot = None
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ YAML —Ñ–∞–π–ª–∞
            config = load_config(args.config)

            # –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
            if args.mode == "websocket":
                print("üîß Creating WebSocket Orchestrator...")
                from src.strategies.scalping.websocket_orchestrator import WebSocketScalpingOrchestrator
                from src.okx_client import OKXClient
                
                print("üîß Initializing OKX Client...")
                # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebSocket –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä
                okx_client = OKXClient(config.get_okx_config())
                
                print("üîß Creating WebSocket Orchestrator...")
                bot = WebSocketScalpingOrchestrator(config, okx_client)
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
                if args.test_mode:
                    bot.test_mode = True
                
                print("üöÄ Starting WebSocket Bot...")
                # –ó–∞–ø—É—Å–∫–∞–µ–º WebSocket –±–æ—Ç–∞
                await bot.start()
            else:
                # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π REST —Ä–µ–∂–∏–º
                bot = BotRunner(
                    config=config,
                    mode="rest"
                )
                
                # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
                await bot.initialize()
                await bot.run()

        finally:
            # –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            if bot is not None:
                await bot.shutdown()

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (asyncio.run —Å–æ–∑–¥–∞—ë—Ç –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç event loop)
        asyncio.run(run_with_cleanup())

    except KeyboardInterrupt:
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏ Ctrl+C
        print("\n")
        print("Bot stopped by user (Ctrl+C)")
        sys.exit(0)
    except FileNotFoundError as e:
        print(f"ERROR: Config file not found - {e}")
        sys.exit(1)
    except Exception as e:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
        print(f"CRITICAL ERROR: {e}")
        import traceback

        traceback.print_exc()
        sys.exit(1)
    finally:
        # –£–¥–∞–ª—è–µ–º lock file –ø—Ä–∏ –ª—é–±–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        lock_file = Path("data/cache/bot.lock")
        if lock_file.exists():
            try:
                lock_file.unlink()
            except Exception as e:  # noqa: B110
                # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è lock file –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
                print(f"WARNING: Could not remove lock file: {e}")


if __name__ == "__main__":
    main()
