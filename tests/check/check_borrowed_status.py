import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–π–º–æ–≤ –Ω–∞ OKX
"""
import asyncio
import sys

sys.path.append(".")
from src.config import load_config
from src.okx_client import OKXClient


async def check_borrowed():
    config = load_config()
    async with OKXClient(config.api["okx"]) as client:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–π–º—ã
        btc_borrowed = await client.get_borrowed_balance("BTC")
        usdt_borrowed = await client.get_borrowed_balance("USDT")

        print("üîç –¢–ï–ö–£–©–ò–ô –°–¢–ê–¢–£–° –ó–ê–ô–ú–û–í:")
        print(f"   BTC –∑–∞–π–º: {btc_borrowed}")
        print(f"   USDT –∑–∞–π–º: {usdt_borrowed}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–∏–π –±–∞–ª–∞–Ω—Å
        btc_balance = await client.get_balance("BTC")
        usdt_balance = await client.get_balance("USDT")
        print("\nüí∞ –û–ë–©–ò–ô –ë–ê–õ–ê–ù–°:")
        print(
            f'   BTC: {btc_balance.get("bal", "0")} (–∑–∞–π–º: {btc_balance.get("borrowed", "0")})'
        )
        print(
            f'   USDT: {usdt_balance.get("bal", "0")} (–∑–∞–π–º: {usdt_balance.get("borrowed", "0")})'
        )

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if float(btc_borrowed) > 0 or float(usdt_borrowed) > 0:
            print("\nüö® –î–ï–ô–°–¢–í–ò–Ø –¢–†–ï–ë–£–Æ–¢–°–Ø:")
            print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ OKX –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
            print("   2. Portfolio ‚Üí Borrow ‚Üí Repay All")
            print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ borrowed = 0")
            print("   4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")
        else:
            print("\n‚úÖ –ó–ê–ô–ú–û–í –ù–ï–¢ - –ë–û–¢ –ì–û–¢–û–í –ö –ó–ê–ü–£–°–ö–£!")


if __name__ == "__main__":
    asyncio.run(check_borrowed())
