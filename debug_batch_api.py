#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Batch API
"""
import asyncio
import sys

sys.path.append(".")
from src.config import load_config
from src.okx_client import OKXClient


async def debug_batch_api():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Batch API"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê BATCH API")
    print("=" * 50)

    try:
        config = load_config()
        async with OKXClient(config.api["okx"]) as client:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
            print("\n1Ô∏è‚É£ API –ö–õ–Æ–ß:")
            print("-" * 30)
            print(f"   API Key: {client.api_key[:10]}...")
            print(f"   Secret: {client.api_secret[:10]}...")
            print(f"   Passphrase: {client.passphrase}")

            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π URL
            print("\n2Ô∏è‚É£ –ë–ê–ó–û–í–´–ô URL:")
            print("-" * 30)
            print(f"   Base URL: {client.base_url}")
            print(f"   Sandbox: {client.sandbox}")

            # 3. –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            print("\n3Ô∏è‚É£ –¢–ï–°–¢ –ü–†–û–°–¢–û–ì–û –ó–ê–ü–†–û–°–ê:")
            print("-" * 30)
            try:
                account_config = await client.get_account_config()
                print("‚úÖ –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print(f"   Account Level: {account_config.get('acctLv')}")
            except Exception as e:
                print(f"‚ùå –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")

            # 4. –¢–µ—Å—Ç batch amend
            print("\n4Ô∏è‚É£ –¢–ï–°–¢ BATCH AMEND:")
            print("-" * 30)
            try:
                # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π batch
                test_batch = [
                    {"instId": "BTC-USDT", "ordId": "test_order_123", "newPx": "50000"}
                ]

                result = await client.batch_amend_orders(test_batch)
                print(f"   Batch result: {result}")
            except Exception as e:
                print(f"‚ùå Batch amend –æ—à–∏–±–∫–∞: {e}")
                print(f"   –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")

            # 5. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã
            print("\n5Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:")
            print("-" * 30)

            if "APIKey does not match current environment" in str(e):
                print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: API –∫–ª—é—á –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å—Ä–µ–¥—ã")
                print("   –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
                print("   1. API –∫–ª—é—á –¥–ª—è sandbox, –∞ –∑–∞–ø—Ä–æ—Å –Ω–∞ live")
                print("   2. API –∫–ª—é—á –¥–ª—è live, –∞ –∑–∞–ø—Ä–æ—Å –Ω–∞ sandbox")
                print("   3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ sandbox —Ä–µ–∂–∏–º–∞")

            # 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            print("\n6Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
            print("-" * 30)
            print("1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ sandbox –≤ config.yaml")
            print("2. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ API –∫–ª—é—á —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ä–µ–¥–µ")
            print("3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(debug_batch_api())
