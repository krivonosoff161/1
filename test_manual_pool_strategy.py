#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Manual Pool Strategy - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
"""

import asyncio

from src.config import load_config
from src.main import BotRunner


async def test_manual_pool_strategy():
    print("üß™ –¢–ï–°–¢ MANUAL POOL STRATEGY")
    print("=" * 50)

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
        config = load_config()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥ –∑–∞–≥—Ä—É–∂–µ–Ω")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º manual_pools
        print(
            f"Config attributes: {[attr for attr in dir(config) if not attr.startswith('_')]}"
        )

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
        if hasattr(config, "manual_pools"):
            print("‚úÖ Manual pools –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ—Ä–Ω–µ")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º ETH pool
            eth_pool = config.manual_pools["eth_pool"]
            btc_pool = config.manual_pools["btc_pool"]
            usdt_pool = config.manual_pools["usdt_pool"]
        elif hasattr(config, "scalping") and hasattr(config.scalping, "manual_pools"):
            print("‚úÖ Manual pools –Ω–∞–π–¥–µ–Ω—ã –≤ scalping")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º ETH pool
            eth_pool = config.scalping.manual_pools["eth_pool"]
            btc_pool = config.scalping.manual_pools["btc_pool"]
            usdt_pool = config.scalping.manual_pools["usdt_pool"]
        else:
            print("‚ùå Manual pools –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print(
                f"Scalping attributes: {[attr for attr in dir(config.scalping) if not attr.startswith('_')]}"
            )
            return

        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ manual_pools –Ω–∞–π–¥–µ–Ω—ã
        print(f"\nüìä ETH POOL:")
        print(f"   Fixed Amount: {eth_pool['fixed_amount']} USDT")
        print(f"   Max Positions: {eth_pool['max_open_positions']}")
        print(f"   Priority: {eth_pool['priority']}")
        print(f"   Trending: {eth_pool['trending']['quantity_per_trade']} ETH")
        print(f"   Ranging: {eth_pool['ranging']['quantity_per_trade']} ETH")
        print(f"   Choppy: {eth_pool['choppy']['quantity_per_trade']} ETH")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º BTC pool
        print(f"\nüìä BTC POOL:")
        print(f"   Fixed Amount: {btc_pool['fixed_amount']} USDT")
        print(f"   Max Positions: {btc_pool['max_open_positions']}")
        print(f"   Priority: {btc_pool['priority']}")
        print(f"   Trending: {btc_pool['trending']['quantity_per_trade']} BTC")
        print(f"   Ranging: {btc_pool['ranging']['quantity_per_trade']} BTC")
        print(f"   Choppy: {btc_pool['choppy']['quantity_per_trade']} BTC")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º USDT pool
        print(f"\nüìä USDT POOL:")
        print(f"   Fixed Amount: {usdt_pool['fixed_amount']} USDT")
        print(f"   Max Positions: {usdt_pool['max_open_positions']}")
        print(f"   Priority: {usdt_pool['priority']}")
        print(f"   Trending: {usdt_pool['trending']['quantity_per_trade']} USDT")
        print(f"   Ranging: {usdt_pool['ranging']['quantity_per_trade']} USDT")
        print(f"   Choppy: {usdt_pool['choppy']['quantity_per_trade']} USDT")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
        print("\nü§ñ –¢–ï–°–¢ –ë–û–¢–ê:")
        print("-" * 30)

        bot = BotRunner(config)
        await bot.initialize()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
        if hasattr(bot.strategy, "config"):
            print("‚úÖ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ manual_pools —á–µ—Ä–µ–∑ full_config
            if hasattr(bot.strategy, "full_config") and hasattr(
                bot.strategy.full_config, "manual_pools"
            ):
                print("‚úÖ Manual pools –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —á–µ—Ä–µ–∑ full_config")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–∂–∏–º–∞
                print("\nüîç –ü–†–û–í–ï–†–ö–ê –ü–ê–†–ê–ú–ï–¢–†–û–í –ü–û –†–ï–ñ–ò–ú–ê–ú:")

                # TRENDING —Ä–µ–∂–∏–º
                print("\nüìà TRENDING –†–ï–ñ–ò–ú:")
                eth_trending = bot.strategy.full_config.manual_pools["eth_pool"][
                    "trending"
                ]
                print(
                    f"   ETH: {eth_trending['quantity_per_trade']} ETH, Score: {eth_trending['score_threshold']}"
                )
                print(
                    f"   TP: {eth_trending['tp_percent']}%, SL: {eth_trending['sl_percent']}%"
                )
                print(
                    f"   Time: {eth_trending['time_limit_seconds']}s, PH: {eth_trending['ph_threshold']}"
                )

                btc_trending = bot.strategy.full_config.manual_pools["btc_pool"][
                    "trending"
                ]
                print(
                    f"   BTC: {btc_trending['quantity_per_trade']} BTC, Score: {btc_trending['score_threshold']}"
                )
                print(
                    f"   TP: {btc_trending['tp_percent']}%, SL: {btc_trending['sl_percent']}%"
                )
                print(
                    f"   Time: {btc_trending['time_limit_seconds']}s, PH: {btc_trending['ph_threshold']}"
                )

                # RANGING —Ä–µ–∂–∏–º
                print("\nüìä RANGING –†–ï–ñ–ò–ú:")
                eth_ranging = bot.strategy.full_config.manual_pools["eth_pool"][
                    "ranging"
                ]
                print(
                    f"   ETH: {eth_ranging['quantity_per_trade']} ETH, Score: {eth_ranging['score_threshold']}"
                )
                print(
                    f"   TP: {eth_ranging['tp_percent']}%, SL: {eth_ranging['sl_percent']}%"
                )
                print(
                    f"   Time: {eth_ranging['time_limit_seconds']}s, PH: {eth_ranging['ph_threshold']}"
                )

                btc_ranging = bot.strategy.full_config.manual_pools["btc_pool"][
                    "ranging"
                ]
                print(
                    f"   BTC: {btc_ranging['quantity_per_trade']} BTC, Score: {btc_ranging['score_threshold']}"
                )
                print(
                    f"   TP: {btc_ranging['tp_percent']}%, SL: {btc_ranging['sl_percent']}%"
                )
                print(
                    f"   Time: {btc_ranging['time_limit_seconds']}s, PH: {btc_ranging['ph_threshold']}"
                )

                # CHOPPY —Ä–µ–∂–∏–º
                print("\nüå™Ô∏è CHOPPY –†–ï–ñ–ò–ú:")
                eth_choppy = bot.strategy.full_config.manual_pools["eth_pool"]["choppy"]
                print(
                    f"   ETH: {eth_choppy['quantity_per_trade']} ETH, Score: {eth_choppy['score_threshold']}"
                )
                print(
                    f"   TP: {eth_choppy['tp_percent']}%, SL: {eth_choppy['sl_percent']}%"
                )
                print(
                    f"   Time: {eth_choppy['time_limit_seconds']}s, PH: {eth_choppy['ph_threshold']}"
                )

                btc_choppy = bot.strategy.full_config.manual_pools["btc_pool"]["choppy"]
                print(
                    f"   BTC: {btc_choppy['quantity_per_trade']} BTC, Score: {btc_choppy['score_threshold']}"
                )
                print(
                    f"   TP: {btc_choppy['tp_percent']}%, SL: {btc_choppy['sl_percent']}%"
                )
                print(
                    f"   Time: {btc_choppy['time_limit_seconds']}s, PH: {btc_choppy['ph_threshold']}"
                )

            else:
                print("‚ùå Manual pools –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")

        print("\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("\nüöÄ –ì–û–¢–û–í –ö –ó–ê–ü–£–°–ö–£!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback

        traceback.print_exc()
    finally:
        try:
            await bot.shutdown()
        except:
            pass


if __name__ == "__main__":
    asyncio.run(test_manual_pool_strategy())
