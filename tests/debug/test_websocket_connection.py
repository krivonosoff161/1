#!/usr/bin/env python3
"""
–¢–µ—Å—Ç WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OKX
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –±–æ—Ç–∞
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))

from src.websocket_manager import WebSocketPriceManager, WebSocketConfig
from src.config import load_config

async def test_websocket_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WebSocket OKX"""
    print("üîß Testing WebSocket Connection...")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        print("üìã Loading config...")
        config = load_config("config.yaml")
        
        # –°–æ–∑–¥–∞–µ–º WebSocket –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        print("‚öôÔ∏è Creating WebSocket config...")
        websocket_config = WebSocketConfig(
            url="wss://ws.okx.com:8443/ws/v5/public",
            ping_interval=20,
            ping_timeout=10,
            close_timeout=10,
            max_size=2**20,
            reconnect_attempts=5,
            reconnect_delay=5
        )
        
        # –°–æ–∑–¥–∞–µ–º WebSocket Manager
        print("üîå Creating WebSocket Manager...")
        websocket_manager = WebSocketPriceManager(websocket_config)
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
        print("üöÄ Attempting connection...")
        connected = await websocket_manager.connect()
        
        if connected:
            print("‚úÖ WebSocket connected successfully!")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —Ç–∏–∫–µ—Ä
            print("üìä Testing ticker subscription...")
            await websocket_manager.subscribe_ticker("BTC-USDT")
            
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            print("‚è≥ Waiting for data (5 seconds)...")
            await asyncio.sleep(5)
            
            # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è
            print("üîå Disconnecting...")
            await websocket_manager.disconnect()
            print("‚úÖ Test completed successfully!")
            
        else:
            print("‚ùå Failed to connect to WebSocket")
            return False
            
    except Exception as e:
        print(f"‚ùå Test failed: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    return True

if __name__ == "__main__":
    print("üß™ WebSocket Connection Test")
    print("=" * 50)
    
    result = asyncio.run(test_websocket_connection())
    
    if result:
        print("üéâ Test PASSED!")
    else:
        print("üí• Test FAILED!")
        sys.exit(1)

